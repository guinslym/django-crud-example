  motto:
   ☐ Simple is better than complex.
   ☐ Stop when you hit a rock
   ☐ I don't have DREAMS I have GOALS
   ☐ Ni**a we made it
   ☐ Stick to your plan no matter what
   ☐ Gucci Gwop
   ☐ 

  What is missing after creating this first draft:
   ☐ Use behave to write the scenario.
     ☐ http://pythonhosted.org/behave/tutorial.html


  USer can:
    ☐ Validate each form
      ☐ Profile
        ☐ birth_date more than 18 years ago
      ☐ LineupPost
        ☐ time to validate
    ✔ Add places.js for user location (city only) @done (16-11-29 06:16)
    ☐ Make sure that every page has the components that I need (votes + Messages) even if the components doesn't work (like icons href=#)
    ☐ Votes
    ☐ Comments
    ☐ Messages
    ☐ Products
    ☐ Paiement
    ☐ Uncomment all the link in the urls.py
    ☐ Refine the design of my applications
    ☐ Validation + Signals
    ☐ signals.py
    ☐ seed the db using Faker instead
    ☐ {{ }}


  Todo views.py/urls.py:
    ☐ I need to redo the app ...
    ☐ I lost the momemtum
    ☐ I need to know how to interact with User like
    ☐ Who can update..
    ☐ I need also to modifyied the layout... make it simpler
    ☐ with no picture
    ☐ I need also to simplify it...
    ✔ Fuckit no more test with pdd @done(2016-12-16 15:56) @project(Todo views.py/urls.py)
    ☐ Create views with pages (sequencial) All the views needs to have a page
    ☐ Create test for the views
     ☐ Start Views Testing
     ☐ Test urls
     ☐ Django-rest-Framewok testing too
     ☐ Add tile image like Bourbon
     ☐ Add Mobile template

Javascript:
 ☐ http://jquery-plugins.net/
 ☐ http://kenkeiter.com/skeuocard/
 ☐ https://github.com/thinker3197/progressively

GMAPS:
 ☐ https://github.com/mapbox/pixelmatch
 ☐ https://snazzymaps.com/
 http://www.mapstylr.com/

  Today:
   ☐ Testing view...
   ☐ Maybe add template
   ☐ DRF (wish to be there)

  https://github.com/tejoesperanto/pasportaservo
  https://github.com/EquipoKerapu/equipo/blob/7debdeca31b29c45d38d0591f594de0375aacde3/src/students/views.py
  https://github.com/oodimkooo/my-blog/blob/017d15f8df5377b0d65530253d44d0640dfa6de6/myblog/views.py
  https://github.com/alrvivas/CrevenApp/blob/190291cfc798cbc52ba4cdbfa258ef0b983f7249/util/address.py
  Tests:

  API-dbehave:
  https://github.com/JuanLSanchez/chefs_django_rest/blob/develop/features/steps/utilities.py
  https://github.com/mick88/play-pi/blob/8e45072b7e0ee1b168f8378e98b2d96d44abc43a/play_pi/views/views.py

  Github search:
  https://github.com/search?o=desc&q=filename%3Aviews.py+language%3Apython+detailview+select_related&ref=searchresults&s=indexed&type=Code&utf8=%E2%9C%93

  https://github.com/MattRijk/newspaper/blob/365f316ca70100424afb1ad4068f2ca084364804/commenter/tests/test_models.py

  https://github.com/MichaelPavlov/django_cookbook_2016/tree/master/movies/tests

  https://github.com/KostyaZi/LongLines/blob/0985110cd08da6474efe42671ac1cf80fd8f7acf/mysite/longlines/tests/test_models.py

  https://github.com/ad-lebedev/django-todo-rest/blob/eca8792b314b33e7f3a9b5da72feb6296acc086b/todo-project/todo/tests/test_models.py

http://www.slideshare.net/spinlai/the-django-bookchap10advancedmodels
  https://github.com/mozilla/teach-api
  Vocabulary:
   ☐ How do I call the person that waits to get pay?
   ☐ How do I call the person that create the post
   ☐ i.e: The **host** and **guest** for AirBnB

  Motivation:
   ☐ Visualize
   ☐ While you are resting .. you are going no where
   ☐ The true failure is not trying at all

  Music:
   ☐ https://soundcloud.com/schirmchendrink/schirmchedrink-28-blue-pearl-by-timujin

Article to read:
 ☐ http://www.thepennyhoarder.com/professional-line-sitter/
 ☐ https://www.taskrabbit.com/m/gen-help/waiting-in-line
 ☐ http://www.dailymail.co.uk/femail/article-2589257/Too-busy-wait-hours-Cronut-Meet-professional-line-sitters-paid-25-hour-queue-trendy-releases.html
 ☐ http://www.themeparkinsider.com/news/response.cfm?ID=3166
 ☐ http://www.businessinsider.com/professional-line-sitters-2015-10
 ☐ https://www.theatlantic.com/business/archive/2014/07/the-growing-market-for-getting-paid-to-wait-in-line/375083/
 ☐ https://www.google.ca/search?client=safari&rls=en&q=wait+in+line+for+somebody+else&ie=UTF-8&oe=UTF-8&gfe_rd=cr&ei=EhyaWNfjNcOC8QfMp40Q
  Bootstrap profile form:
   ☐ http://bootdey.com/snippets/view/edit-profile-form

Error:
  ☐ I had difficulty installing django-allauth on Windows
  ☐ I delete the django-allauth folder 'pip show django-allauth'
  ☐ I installed django-allauth==1.24.1
  ☐ At University St-Paul I have to be in the English login session so that I can install CMDER and GITHUB

login:
 ☐ adminadmin
 ☐ adad@gmail.com
 ☐ (famille)
  ＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
  Archive:
 ✔ create the user story @done (16-11-29 00:36) @project(What is missing after creating this first draft)
 ✔ I didn't fully understand the user story @done (16-11-29 00:36) @project(What is missing after creating this first draft)
 ✔ Validation (list) @done (16-11-28 04:52) @project(USer can)
 ✔ datetime select to add with bootstrap @done (16-11-29 01:25) @project(USer can)
 ✔ http://www.malot.fr/bootstrap-datetimepicker/demo.php @done (16-11-29 00:56) @project(USer can)
 ✔ voir si les statics sont en place @done (16-11-29 01:25) @project(USer can)
 ✔ Create a dummy page @done (16-11-29 01:25) @project(USer can)
 ✔ imagefield @done (16-11-29 03:50) @project(USer can)
 ✔ Forms to add @done (16-11-29 03:50) @project(USer can)
 ✔ View List of Stores @done (16-11-27 02:50) @project(USer can)
 ✔ View List of City @done (16-11-27 02:58) @project(USer can)
 ✔ UPDATE a profile @done (16-11-27 10:49) @project(USer can)
 ✔ View Store and google map of Store @done (16-11-27 15:43) @project(USer can)
 ✔ Views folder @done (16-11-27 05:54) @project(USer can)
 ✔ Search City @done (16-11-28 00:37) @project(USer can)
 ✔ Search Store @done (16-11-28 00:37) @project(USer can)
 ✔ LOGIN @done (16-11-28 00:48) @project(USer can)
 ✔ LOGOUT @done (16-11-28 00:48) @project(USer can)
 ✔ REGISTER @done (16-11-28 00:48) @project(USer can)
 ✔ View BankAccount @done(2016-11-25 02:49) @project(USer can) @project(USer can)
 ✔ lineUpPost to redo @done (16-11-27 02:30) @project(USer can)
 ✔ VIEW a profile @done (16-11-27 00:55) @project(USer can)
 ✔ DETAIL for Profile (context_data .. if it's protected or not) @done (16-11-27 00:31) @project(USer can)
 ✔ DELETE a LineupPost @done (16-11-26 20:55) @project(USer can)
 ✔ UPDATE a LineupPost @done (16-11-26 20:37) @project(USer can)
 ✔ CREATE a LineupPost @done (16-11-26 20:37) @project(USer can)
 ✔ VIEW a LineupPost @done (16-11-26 19:47) @project(USer can)
   ✔ Write the Tests @done (16-11-19 21:16) @project(Tests)
   ✔ Write the Models Up to bottom @done (16-11-19 21:16) @project(Tests)
   ✔ Tests users @done (16-11-19 21:16) @project(Tests)
   ✔ Tests methods @done (16-11-19 21:16) @project(Tests)
   ✔ Tests attributes @done (16-11-19 21:16) @project(Tests)
   ✔ Stripe unsuccess @done (16-11-19 21:14) @project(Todo views.py/urls.py)
   ✔ Startup template @done (16-11-19 21:14) @project(Todo views.py/urls.py)
   ✔ Frontend - home to redo @done (16-11-19 21:14) @project(Todo views.py/urls.py)
   ✔ Add subscribe @done (16-11-19 21:14) @project(Todo views.py/urls.py)
   ✔ Stripe success @done (16-11-19 21:13) @project(Todo views.py/urls.py)
   ✔ Messages between user @done (16-11-19 21:13) @project(Todo views.py/urls.py)
   ✔ Add Stripe Form @done (16-11-19 21:13) @project(Todo views.py/urls.py)
   ✔ Configure static file for images @done (16-11-15 00:25) @project(Routes)
   ✔ Create a Post  (form) @done (16-11-14 23:06) @project(Routes)
   ✔ Send Request @done (16-11-14 22:51) @project(Routes)
   ✔ Footer to do @done (16-11-14 22:51) @project(Routes)
   ✔ Accepted Request (Mobile) @done (16-11-14 22:47) @project(Routes)
   ✔ Comments @done (16-11-14 22:42) @project(Routes)
   ✔ Profile @done (16-11-14 22:41) @project(Routes)
   ✔ Popularity @done (16-11-14 22:41) @project(Routes)
   ✔ Date on posts to modify for December 26 @done (16-11-14 21:40) @project(Routes)
   ✔ All the post @done (16-11-14 21:40) @project(Routes)
   ✔ Edit Profile @done (16-11-14 21:28) @project(Routes)
   ✔ By Date @done (16-11-14 21:25) @project(Routes)
   ✔ Author @done (16-11-14 21:23) @project(Routes)
   ✔ cities  @done (16-11-14 21:19) @project(Routes)
   ✔ Companies  @done (16-11-14 21:19) @project(Routes)
   ✔ Sign up page @done (16-11-14 21:06) @project(Routes)
   ✔ Posts @done (16-11-14 20:01) @project(Routes)
   ✔ /posts @done (16-11-14 20:01) @project(Routes)
   ✔ /post @done (16-11-14 20:01) @project(Routes)
   ✔ Logout @done (16-11-14 20:00) @project(Routes)
   ✔ Login @done (16-11-14 20:00) @project(Routes)
   ✔ Home @done (16-11-14 20:00) @project(Routes)
   ✔ Contact @done (16-11-14 20:00) @project(Routes)
   ✔ About @done (16-11-14 20:00) @project(Routes)
